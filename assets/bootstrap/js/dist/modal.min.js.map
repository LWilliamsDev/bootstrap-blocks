{"version":3,"sources":["../src/util/index.js","../src/util/scrollbar.js","../src/util/backdrop.js","../src/util/focustrap.js","../src/util/component-functions.js","../src/modal.js"],"names":["TRANSITION_END","getElementFromSelector","element","selector","getAttribute","hrefAttr","includes","startsWith","split","trim","getSelector","document","querySelector","isElement","obj","jquery","nodeType","typeCheckConfig","componentName","config","configTypes","Object","keys","forEach","property","expectedTypes","value","valueType","toString","call","match","toLowerCase","RegExp","test","TypeError","toUpperCase","reflow","offsetHeight","DOMContentLoadedCallbacks","isRTL","documentElement","dir","execute","callback","SELECTOR_FIXED_CONTENT","SELECTOR_STICKY_CONTENT","ScrollBarHelper","constructor","this","_element","body","getWidth","documentWidth","clientWidth","Math","abs","window","innerWidth","hide","width","_disableOverFlow","_setElementAttributes","calculatedValue","_saveInitialAttribute","style","overflow","styleProp","scrollbarWidth","_applyManipulationCallback","getComputedStyle","Number","parseFloat","reset","_resetElementAttributes","actualValue","Manipulator","setDataAttribute","getDataAttribute","removeProperty","removeDataAttribute","callBack","SelectorEngine","find","isOverflowing","Default","className","isVisible","isAnimated","rootElement","clickCallback","DefaultType","CLASS_NAME_SHOW","EVENT_MOUSEDOWN","Backdrop","_config","_getConfig","_isAppended","show","_append","_getElement","classList","add","_emulateAnimation","remove","dispose","backdrop","createElement","length","append","EventHandler","on","off","transitionElement","waitForTransition","emulatedDuration","transitionDuration","transitionDelay","floatTransitionDuration","floatTransitionDelay","getTransitionDurationFromElement","called","handler","target","removeEventListener","addEventListener","setTimeout","dispatchEvent","Event","executeAfterTransition","trapElement","autofocus","EVENT_KEY","TAB_NAV_BACKWARD","FocusTrap","_isActive","_lastTabNavDirection","activate","focus","event","_handleFocusin","_handleKeydown","deactivate","contains","elements","focusableChildren","key","shiftKey","NAME","ESCAPE_KEY","keyboard","EVENT_HIDDEN","EVENT_SHOW","EVENT_RESIZE","EVENT_CLICK_DISMISS","EVENT_KEYDOWN_DISMISS","EVENT_MOUSEDOWN_DISMISS","CLASS_NAME_OPEN","CLASS_NAME_STATIC","Modal","BaseComponent","super","_dialog","findOne","_backdrop","_initializeBackDrop","_focustrap","_initializeFocusTrap","_isShown","_ignoreBackdropClick","_isTransitioning","_scrollBar","toggle","relatedTarget","trigger","defaultPrevented","_isAnimated","_adjustDialog","_setEscapeEvent","_setResizeEvent","one","_showBackdrop","_showElement","_queueCallback","_hideModal","htmlElement","handleUpdate","Boolean","getDataAttributes","modalBody","parentNode","Node","ELEMENT_NODE","display","removeAttribute","setAttribute","scrollTop","preventDefault","_triggerBackdropTransition","_resetAdjustments","currentTarget","scrollHeight","isModalOverflowing","clientHeight","overflowY","isBodyOverflowing","paddingLeft","paddingRight","static","each","data","getOrCreateInstance","plugin","tagName","showEvent","getClientRects","getPropertyValue","allReadyOpen","getInstance","component","method","clickEvent","name","disabled","hasAttribute","closest","enableDismissTrigger","$","jQuery","getjQuery","JQUERY_NO_CONFLICT","fn","jQueryInterface","Constructor","noConflict","readyState","push"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.1.3): util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nconst toType = obj => {\n  if (obj === null || obj === undefined) {\n    return `${obj}`\n  }\n\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttr = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttr || (!hrefAttr.includes('#') && !hrefAttr.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {\n      hrefAttr = `#${hrefAttr.split('#')[1]}`\n    }\n\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null\n  }\n\n  return selector\n}\n\nconst getSelectorFromElement = element => {\n  const selector = getSelector(element)\n\n  if (selector) {\n    return document.querySelector(selector) ? selector : null\n  }\n\n  return null\n}\n\nconst getElementFromSelector = element => {\n  const selector = getSelector(element)\n\n  return selector ? document.querySelector(selector) : null\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = obj => {\n  if (!obj || typeof obj !== 'object') {\n    return false\n  }\n\n  if (typeof obj.jquery !== 'undefined') {\n    obj = obj[0]\n  }\n\n  return typeof obj.nodeType !== 'undefined'\n}\n\nconst getElement = obj => {\n  if (isElement(obj)) { // it's a jQuery object or a node element\n    return obj.jquery ? obj[0] : obj\n  }\n\n  if (typeof obj === 'string' && obj.length > 0) {\n    return document.querySelector(obj)\n  }\n\n  return null\n}\n\nconst typeCheckConfig = (componentName, config, configTypes) => {\n  Object.keys(configTypes).forEach(property => {\n    const expectedTypes = configTypes[property]\n    const value = config[property]\n    const valueType = value && isElement(value) ? 'element' : toType(value)\n\n    if (!new RegExp(expectedTypes).test(valueType)) {\n      throw new TypeError(\n        `${componentName.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n      )\n    }\n  })\n}\n\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false\n  }\n\n  return getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */\nconst reflow = element => {\n  // eslint-disable-next-line no-unused-expressions\n  element.offsetHeight\n}\n\nconst getjQuery = () => {\n  const { jQuery } = window\n\n  if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return jQuery\n  }\n\n  return null\n}\n\nconst DOMContentLoadedCallbacks = []\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        DOMContentLoadedCallbacks.forEach(callback => callback())\n      })\n    }\n\n    DOMContentLoadedCallbacks.push(callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = callback => {\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener(TRANSITION_END, handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener(TRANSITION_END, handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  let index = list.indexOf(activeElement)\n\n  // if the element does not exist in the list return an element depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return list[!shouldGetNext && isCycleAllowed ? list.length - 1 : 0]\n  }\n\n  const listLength = list.length\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\nexport {\n  getElement,\n  getUID,\n  getSelectorFromElement,\n  getElementFromSelector,\n  getTransitionDurationFromElement,\n  triggerTransitionEnd,\n  isElement,\n  typeCheckConfig,\n  isVisible,\n  isDisabled,\n  findShadowRoot,\n  noop,\n  getNextActiveElement,\n  reflow,\n  getjQuery,\n  onDOMContentLoaded,\n  isRTL,\n  defineJQueryPlugin,\n  execute,\n  executeAfterTransition\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.1.3): util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine'\nimport Manipulator from '../dom/manipulator'\nimport { isElement } from './index'\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\nconst SELECTOR_STICKY_CONTENT = '.sticky-top'\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body\n  }\n\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth\n    return Math.abs(window.innerWidth - documentWidth)\n  }\n\n  hide() {\n    const width = this.getWidth()\n    this._disableOverFlow()\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, 'paddingRight', calculatedValue => calculatedValue + width)\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight', calculatedValue => calculatedValue + width)\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight', calculatedValue => calculatedValue - width)\n  }\n\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow')\n    this._element.style.overflow = 'hidden'\n  }\n\n  _setElementAttributes(selector, styleProp, callback) {\n    const scrollbarWidth = this.getWidth()\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return\n      }\n\n      this._saveInitialAttribute(element, styleProp)\n      const calculatedValue = window.getComputedStyle(element)[styleProp]\n      element.style[styleProp] = `${callback(Number.parseFloat(calculatedValue))}px`\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow')\n    this._resetElementAttributes(this._element, 'paddingRight')\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight')\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight')\n  }\n\n  _saveInitialAttribute(element, styleProp) {\n    const actualValue = element.style[styleProp]\n    if (actualValue) {\n      Manipulator.setDataAttribute(element, styleProp, actualValue)\n    }\n  }\n\n  _resetElementAttributes(selector, styleProp) {\n    const manipulationCallBack = element => {\n      const value = Manipulator.getDataAttribute(element, styleProp)\n      if (typeof value === 'undefined') {\n        element.style.removeProperty(styleProp)\n      } else {\n        Manipulator.removeDataAttribute(element, styleProp)\n        element.style[styleProp] = value\n      }\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _applyManipulationCallback(selector, callBack) {\n    if (isElement(selector)) {\n      callBack(selector)\n    } else {\n      SelectorEngine.find(selector, this._element).forEach(callBack)\n    }\n  }\n\n  isOverflowing() {\n    return this.getWidth() > 0\n  }\n}\n\nexport default ScrollBarHelper\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.1.3): util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler'\nimport { execute, executeAfterTransition, getElement, reflow, typeCheckConfig } from './index'\n\nconst Default = {\n  className: 'modal-backdrop',\n  isVisible: true, // if false, we use the backdrop helper without adding any element to the dom\n  isAnimated: false,\n  rootElement: 'body', // give the choice to place backdrop under different elements\n  clickCallback: null\n}\n\nconst DefaultType = {\n  className: 'string',\n  isVisible: 'boolean',\n  isAnimated: 'boolean',\n  rootElement: '(element|string)',\n  clickCallback: '(function|null)'\n}\nconst NAME = 'backdrop'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\nconst EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`\n\nclass Backdrop {\n  constructor(config) {\n    this._config = this._getConfig(config)\n    this._isAppended = false\n    this._element = null\n  }\n\n  show(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._append()\n\n    if (this._config.isAnimated) {\n      reflow(this._getElement())\n    }\n\n    this._getElement().classList.add(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      execute(callback)\n    })\n  }\n\n  hide(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._getElement().classList.remove(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      this.dispose()\n      execute(callback)\n    })\n  }\n\n  // Private\n\n  _getElement() {\n    if (!this._element) {\n      const backdrop = document.createElement('div')\n      backdrop.className = this._config.className\n      if (this._config.isAnimated) {\n        backdrop.classList.add(CLASS_NAME_FADE)\n      }\n\n      this._element = backdrop\n    }\n\n    return this._element\n  }\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...(typeof config === 'object' ? config : {})\n    }\n\n    // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n    config.rootElement = getElement(config.rootElement)\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _append() {\n    if (this._isAppended) {\n      return\n    }\n\n    this._config.rootElement.append(this._getElement())\n\n    EventHandler.on(this._getElement(), EVENT_MOUSEDOWN, () => {\n      execute(this._config.clickCallback)\n    })\n\n    this._isAppended = true\n  }\n\n  dispose() {\n    if (!this._isAppended) {\n      return\n    }\n\n    EventHandler.off(this._element, EVENT_MOUSEDOWN)\n\n    this._element.remove()\n    this._isAppended = false\n  }\n\n  _emulateAnimation(callback) {\n    executeAfterTransition(callback, this._getElement(), this._config.isAnimated)\n  }\n}\n\nexport default Backdrop\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.1.3): util/focustrap.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler'\nimport SelectorEngine from '../dom/selector-engine'\nimport { typeCheckConfig } from './index'\n\nconst Default = {\n  trapElement: null, // The element to trap focus inside of\n  autofocus: true\n}\n\nconst DefaultType = {\n  trapElement: 'element',\n  autofocus: 'boolean'\n}\n\nconst NAME = 'focustrap'\nconst DATA_KEY = 'bs.focustrap'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY}`\n\nconst TAB_KEY = 'Tab'\nconst TAB_NAV_FORWARD = 'forward'\nconst TAB_NAV_BACKWARD = 'backward'\n\nclass FocusTrap {\n  constructor(config) {\n    this._config = this._getConfig(config)\n    this._isActive = false\n    this._lastTabNavDirection = null\n  }\n\n  activate() {\n    const { trapElement, autofocus } = this._config\n\n    if (this._isActive) {\n      return\n    }\n\n    if (autofocus) {\n      trapElement.focus()\n    }\n\n    EventHandler.off(document, EVENT_KEY) // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN, event => this._handleFocusin(event))\n    EventHandler.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event))\n\n    this._isActive = true\n  }\n\n  deactivate() {\n    if (!this._isActive) {\n      return\n    }\n\n    this._isActive = false\n    EventHandler.off(document, EVENT_KEY)\n  }\n\n  // Private\n\n  _handleFocusin(event) {\n    const { target } = event\n    const { trapElement } = this._config\n\n    if (target === document || target === trapElement || trapElement.contains(target)) {\n      return\n    }\n\n    const elements = SelectorEngine.focusableChildren(trapElement)\n\n    if (elements.length === 0) {\n      trapElement.focus()\n    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {\n      elements[elements.length - 1].focus()\n    } else {\n      elements[0].focus()\n    }\n  }\n\n  _handleKeydown(event) {\n    if (event.key !== TAB_KEY) {\n      return\n    }\n\n    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD\n  }\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...(typeof config === 'object' ? config : {})\n    }\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n}\n\nexport default FocusTrap\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.1.3): util/component-functions.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler'\nimport { getElementFromSelector, isDisabled } from './index'\n\nconst enableDismissTrigger = (component, method = 'hide') => {\n  const clickEvent = `click.dismiss${component.EVENT_KEY}`\n  const name = component.NAME\n\n  EventHandler.on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function (event) {\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault()\n    }\n\n    if (isDisabled(this)) {\n      return\n    }\n\n    const target = getElementFromSelector(this) || this.closest(`.${name}`)\n    const instance = component.getOrCreateInstance(target)\n\n    // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n    instance[method]()\n  })\n}\n\nexport {\n  enableDismissTrigger\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.1.3): modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isRTL,\n  isVisible,\n  reflow,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport ScrollBarHelper from './util/scrollbar'\nimport BaseComponent from './base-component'\nimport Backdrop from './util/backdrop'\nimport FocusTrap from './util/focustrap'\nimport { enableDismissTrigger } from './util/component-functions'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'modal'\nconst DATA_KEY = 'bs.modal'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst ESCAPE_KEY = 'Escape'\n\nconst Default = {\n  backdrop: true,\n  keyboard: true,\n  focus: true\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  focus: 'boolean'\n}\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEUP_DISMISS = `mouseup.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_OPEN = 'modal-open'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_STATIC = 'modal-static'\n\nconst OPEN_SELECTOR = '.modal.show'\nconst SELECTOR_DIALOG = '.modal-dialog'\nconst SELECTOR_MODAL_BODY = '.modal-body'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Modal extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._config = this._getConfig(config)\n    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element)\n    this._backdrop = this._initializeBackDrop()\n    this._focustrap = this._initializeFocusTrap()\n    this._isShown = false\n    this._ignoreBackdropClick = false\n    this._isTransitioning = false\n    this._scrollBar = new ScrollBarHelper()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, {\n      relatedTarget\n    })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n\n    if (this._isAnimated()) {\n      this._isTransitioning = true\n    }\n\n    this._scrollBar.hide()\n\n    document.body.classList.add(CLASS_NAME_OPEN)\n\n    this._adjustDialog()\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    EventHandler.on(this._dialog, EVENT_MOUSEDOWN_DISMISS, () => {\n      EventHandler.one(this._element, EVENT_MOUSEUP_DISMISS, event => {\n        if (event.target === this._element) {\n          this._ignoreBackdropClick = true\n        }\n      })\n    })\n\n    this._showBackdrop(() => this._showElement(relatedTarget))\n  }\n\n  hide() {\n    if (!this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = false\n    const isAnimated = this._isAnimated()\n\n    if (isAnimated) {\n      this._isTransitioning = true\n    }\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    this._focustrap.deactivate()\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n\n    EventHandler.off(this._element, EVENT_CLICK_DISMISS)\n    EventHandler.off(this._dialog, EVENT_MOUSEDOWN_DISMISS)\n\n    this._queueCallback(() => this._hideModal(), this._element, isAnimated)\n  }\n\n  dispose() {\n    [window, this._dialog]\n      .forEach(htmlElement => EventHandler.off(htmlElement, EVENT_KEY))\n\n    this._backdrop.dispose()\n    this._focustrap.deactivate()\n    super.dispose()\n  }\n\n  handleUpdate() {\n    this._adjustDialog()\n  }\n\n  // Private\n\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: Boolean(this._config.backdrop), // 'static' option will be translated to true, and booleans will keep their value\n      isAnimated: this._isAnimated()\n    })\n  }\n\n  _initializeFocusTrap() {\n    return new FocusTrap({\n      trapElement: this._element\n    })\n  }\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' ? config : {})\n    }\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _showElement(relatedTarget) {\n    const isAnimated = this._isAnimated()\n    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog)\n\n    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n      // Don't move modal's DOM position\n      document.body.append(this._element)\n    }\n\n    this._element.style.display = 'block'\n    this._element.removeAttribute('aria-hidden')\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.scrollTop = 0\n\n    if (modalBody) {\n      modalBody.scrollTop = 0\n    }\n\n    if (isAnimated) {\n      reflow(this._element)\n    }\n\n    this._element.classList.add(CLASS_NAME_SHOW)\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._focustrap.activate()\n      }\n\n      this._isTransitioning = false\n      EventHandler.trigger(this._element, EVENT_SHOWN, {\n        relatedTarget\n      })\n    }\n\n    this._queueCallback(transitionComplete, this._dialog, isAnimated)\n  }\n\n  _setEscapeEvent() {\n    if (this._isShown) {\n      EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n        if (this._config.keyboard && event.key === ESCAPE_KEY) {\n          event.preventDefault()\n          this.hide()\n        } else if (!this._config.keyboard && event.key === ESCAPE_KEY) {\n          this._triggerBackdropTransition()\n        }\n      })\n    } else {\n      EventHandler.off(this._element, EVENT_KEYDOWN_DISMISS)\n    }\n  }\n\n  _setResizeEvent() {\n    if (this._isShown) {\n      EventHandler.on(window, EVENT_RESIZE, () => this._adjustDialog())\n    } else {\n      EventHandler.off(window, EVENT_RESIZE)\n    }\n  }\n\n  _hideModal() {\n    this._element.style.display = 'none'\n    this._element.setAttribute('aria-hidden', true)\n    this._element.removeAttribute('aria-modal')\n    this._element.removeAttribute('role')\n    this._isTransitioning = false\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN)\n      this._resetAdjustments()\n      this._scrollBar.reset()\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    })\n  }\n\n  _showBackdrop(callback) {\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, event => {\n      if (this._ignoreBackdropClick) {\n        this._ignoreBackdropClick = false\n        return\n      }\n\n      if (event.target !== event.currentTarget) {\n        return\n      }\n\n      if (this._config.backdrop === true) {\n        this.hide()\n      } else if (this._config.backdrop === 'static') {\n        this._triggerBackdropTransition()\n      }\n    })\n\n    this._backdrop.show(callback)\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE)\n  }\n\n  _triggerBackdropTransition() {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const { classList, scrollHeight, style } = this._element\n    const isModalOverflowing = scrollHeight > document.documentElement.clientHeight\n\n    // return if the following background transition hasn't yet completed\n    if ((!isModalOverflowing && style.overflowY === 'hidden') || classList.contains(CLASS_NAME_STATIC)) {\n      return\n    }\n\n    if (!isModalOverflowing) {\n      style.overflowY = 'hidden'\n    }\n\n    classList.add(CLASS_NAME_STATIC)\n    this._queueCallback(() => {\n      classList.remove(CLASS_NAME_STATIC)\n      if (!isModalOverflowing) {\n        this._queueCallback(() => {\n          style.overflowY = ''\n        }, this._dialog)\n      }\n    }, this._dialog)\n\n    this._element.focus()\n  }\n\n  // ----------------------------------------------------------------------\n  // the following methods are used to handle overflowing modals\n  // ----------------------------------------------------------------------\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const scrollbarWidth = this._scrollBar.getWidth()\n    const isBodyOverflowing = scrollbarWidth > 0\n\n    if ((!isBodyOverflowing && isModalOverflowing && !isRTL()) || (isBodyOverflowing && !isModalOverflowing && isRTL())) {\n      this._element.style.paddingLeft = `${scrollbarWidth}px`\n    }\n\n    if ((isBodyOverflowing && !isModalOverflowing && !isRTL()) || (!isBodyOverflowing && isModalOverflowing && isRTL())) {\n      this._element.style.paddingRight = `${scrollbarWidth}px`\n    }\n  }\n\n  _resetAdjustments() {\n    this._element.style.paddingLeft = ''\n    this._element.style.paddingRight = ''\n  }\n\n  // Static\n\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = Modal.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](relatedTarget)\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  EventHandler.one(target, EVENT_SHOW, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return\n    }\n\n    EventHandler.one(target, EVENT_HIDDEN, () => {\n      if (isVisible(this)) {\n        this.focus()\n      }\n    })\n  })\n\n  // avoid conflict when clicking moddal toggler while another one is open\n  const allReadyOpen = SelectorEngine.findOne(OPEN_SELECTOR)\n  if (allReadyOpen) {\n    Modal.getInstance(allReadyOpen).hide()\n  }\n\n  const data = Modal.getOrCreateInstance(target)\n\n  data.toggle(this)\n})\n\nenableDismissTrigger(Modal)\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Modal to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Modal)\n\nexport default Modal\n"]}