{"version":3,"sources":["../src/util/index.js","../src/carousel.js"],"names":["isElement","obj","jquery","nodeType","DOMContentLoadedCallbacks","isRTL","document","documentElement","dir","NAME","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","ORDER_NEXT","ORDER_PREV","DIRECTION_LEFT","DIRECTION_RIGHT","KEY_TO_DIRECTION","ArrowLeft","ArrowRight","EVENT_SLID","CLASS_NAME_ACTIVE","SELECTOR_ACTIVE_ITEM","Carousel","BaseComponent","constructor","element","config","super","this","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_config","_getConfig","_indicatorsElement","SelectorEngine","findOne","_element","_touchSupported","navigator","maxTouchPoints","_pointerEvent","Boolean","window","PointerEvent","_addEventListeners","next","_slide","nextWhenVisible","hidden","getClientRects","length","getComputedStyle","getPropertyValue","prev","event","dispatchEvent","Event","cycle","clearInterval","_updateInterval","setInterval","visibilityState","bind","to","index","activeIndex","_getItemIndex","EventHandler","one","order","Manipulator","getDataAttributes","componentName","configTypes","Object","keys","forEach","property","expectedTypes","value","valueType","toString","call","match","toLowerCase","RegExp","test","TypeError","toUpperCase","typeCheckConfig","_handleSwipe","absDeltax","Math","abs","direction","on","_keydown","_addTouchEventListeners","hasPointerPenTouch","pointerType","start","clientX","touches","move","end","clearTimeout","setTimeout","find","itemImg","preventDefault","classList","add","target","tagName","key","parentNode","indexOf","_getItemByOrder","activeElement","isNext","list","shouldGetNext","isCycleAllowed","listLength","max","min","getNextActiveElement","_triggerSlideEvent","relatedTarget","eventDirectionName","targetIndex","fromIndex","trigger","from","_setActiveIndicatorElement","activeIndicator","remove","removeAttribute","indicators","i","Number","parseInt","getAttribute","setAttribute","elementInterval","defaultInterval","directionOrOrder","_directionToOrder","activeElementIndex","nextElement","nextElementIndex","isCycling","directionalClassName","orderClassName","_orderToDirection","contains","defaultPrevented","triggerSlidEvent","offsetHeight","reflow","completeCallBack","_queueCallback","includes","static","data","getOrCreateInstance","action","ride","each","carouselInterface","selector","hrefAttr","startsWith","split","trim","getSelector","querySelector","getElementFromSelector","slideIndex","getInstance","plugin","callback","dataApiClickHandler","carousels","len","$","jQuery","body","hasAttribute","getjQuery","name","JQUERY_NO_CONFLICT","fn","jQueryInterface","Constructor","noConflict","readyState","addEventListener","push"],"mappings":";;;;;ylBAsGMA,EAAYC,MACXA,GAAsB,iBAARA,UAIO,IAAfA,EAAIC,SACbD,EAAMA,EAAI,SAGmB,IAAjBA,EAAIE,UAqGdC,EAA4B,GAiB5BC,EAAQ,IAAuC,QAAjCC,SAASC,gBAAgBC,ICzMvCC,EAAO,WAUPC,EAAU,CACdC,SAAU,IACVC,UAAU,EACVC,OAAO,EACPC,MAAO,QACPC,MAAM,EACNC,OAAO,GAGHC,EAAc,CAClBN,SAAU,mBACVC,SAAU,UACVC,MAAO,mBACPC,MAAO,mBACPC,KAAM,UACNC,MAAO,WAGHE,EAAa,OACbC,EAAa,OACbC,EAAiB,OACjBC,EAAkB,QAElBC,EAAmB,CACvBC,UAAkBF,EAClBG,WAAmBJ,GAIfK,EAAc,mBAcdC,EAAoB,SASpBC,EAAuB,wBAiB7B,MAAMC,UAAiBC,EAAAA,QACrBC,YAAYC,EAASC,GACnBC,MAAMF,GAENG,KAAKC,OAAS,KACdD,KAAKE,UAAY,KACjBF,KAAKG,eAAiB,KACtBH,KAAKI,WAAY,EACjBJ,KAAKK,YAAa,EAClBL,KAAKM,aAAe,KACpBN,KAAKO,YAAc,EACnBP,KAAKQ,YAAc,EAEnBR,KAAKS,QAAUT,KAAKU,WAAWZ,GAC/BE,KAAKW,mBAAqBC,EAAAA,QAAeC,QA3BjB,uBA2B8Cb,KAAKc,UAC3Ed,KAAKe,gBAAkB,iBAAkB3C,SAASC,iBAAmB2C,UAAUC,eAAiB,EAChGjB,KAAKkB,cAAgBC,QAAQC,OAAOC,cAEpCrB,KAAKsB,qBAKI9C,qBACT,OAAOA,EAGED,kBACT,OAAOA,EAKTgD,OACEvB,KAAKwB,OAAOxC,GAGdyC,kBDJgB5B,IAAAA,GCOTzB,SAASsD,SDPA7B,ECOoBG,KAAKc,SDNpChD,EAAU+B,IAAgD,IAApCA,EAAQ8B,iBAAiBC,QAIgB,YAA7DC,iBAAiBhC,GAASiC,iBAAiB,gBCG9C9B,KAAKuB,OAITQ,OACE/B,KAAKwB,OAAOvC,GAGdL,MAAMoD,GACCA,IACHhC,KAAKI,WAAY,GAGfQ,EAAAA,QAAeC,QApEI,2CAoEwBb,KAAKc,YAC7Bd,KAAKc,SD/DtBmB,cAAc,IAAIC,MA1FL,kBC0JjBlC,KAAKmC,OAAM,IAGbC,cAAcpC,KAAKE,WACnBF,KAAKE,UAAY,KAGnBiC,MAAMH,GACCA,IACHhC,KAAKI,WAAY,GAGfJ,KAAKE,YACPkC,cAAcpC,KAAKE,WACnBF,KAAKE,UAAY,MAGfF,KAAKS,SAAWT,KAAKS,QAAQhC,WAAauB,KAAKI,YACjDJ,KAAKqC,kBAELrC,KAAKE,UAAYoC,aACdlE,SAASmE,gBAAkBvC,KAAKyB,gBAAkBzB,KAAKuB,MAAMiB,KAAKxC,MACnEA,KAAKS,QAAQhC,WAKnBgE,GAAGC,GACD1C,KAAKG,eAAiBS,EAAAA,QAAeC,QAAQpB,EAAsBO,KAAKc,UACxE,MAAM6B,EAAc3C,KAAK4C,cAAc5C,KAAKG,gBAE5C,GAAIuC,EAAQ1C,KAAKC,OAAO2B,OAAS,GAAKc,EAAQ,EAC5C,OAGF,GAAI1C,KAAKK,WAEP,YADAwC,EAAAA,QAAaC,IAAI9C,KAAKc,SAAUvB,GAAY,IAAMS,KAAKyC,GAAGC,KAI5D,GAAIC,IAAgBD,EAGlB,OAFA1C,KAAKpB,aACLoB,KAAKmC,QAIP,MAAMY,EAAQL,EAAQC,EACpB3D,EACAC,EAEFe,KAAKwB,OAAOuB,EAAO/C,KAAKC,OAAOyC,IAKjChC,WAAWZ,GAOT,OANAA,EAAS,IACJtB,KACAwE,EAAAA,QAAYC,kBAAkBjD,KAAKc,aAChB,iBAAXhB,EAAsBA,EAAS,IDhGxB,EAACoD,EAAepD,EAAQqD,KAC9CC,OAAOC,KAAKF,GAAaG,SAAQC,IAC/B,MAAMC,EAAgBL,EAAYI,GAC5BE,EAAQ3D,EAAOyD,GACfG,EAAYD,GAAS3F,EAAU2F,GAAS,UArH5C1F,OADSA,EAsHsD0F,GApHzD,GAAE1F,IAGL,GAAG4F,SAASC,KAAK7F,GAAK8F,MAAM,eAAe,GAAGC,cALxC/F,IAAAA,EAwHX,IAAK,IAAIgG,OAAOP,GAAeQ,KAAKN,GAClC,MAAM,IAAIO,UACP,GAAEf,EAAcgB,0BAA0BX,qBAA4BG,yBAAiCF,WC0F5GW,CAAgB5F,EAAMuB,EAAQf,GACvBe,EAGTsE,eACE,MAAMC,EAAYC,KAAKC,IAAIvE,KAAKQ,aAEhC,GAAI6D,GAnMgB,GAoMlB,OAGF,MAAMG,EAAYH,EAAYrE,KAAKQ,YAEnCR,KAAKQ,YAAc,EAEdgE,GAILxE,KAAKwB,OAAOgD,EAAY,EAAIrF,EAAkBD,GAGhDoC,qBACMtB,KAAKS,QAAQ/B,UACfmE,EAAAA,QAAa4B,GAAGzE,KAAKc,SApLJ,uBAoL6BkB,GAAShC,KAAK0E,SAAS1C,KAG5C,UAAvBhC,KAAKS,QAAQ7B,QACfiE,EAAAA,QAAa4B,GAAGzE,KAAKc,SAvLD,0BAuL6BkB,GAAShC,KAAKpB,MAAMoD,KACrEa,EAAAA,QAAa4B,GAAGzE,KAAKc,SAvLD,0BAuL6BkB,GAAShC,KAAKmC,MAAMH,MAGnEhC,KAAKS,QAAQ3B,OAASkB,KAAKe,iBAC7Bf,KAAK2E,0BAITA,0BACE,MAAMC,EAAqB5C,GAClBhC,KAAKkB,gBAnKO,QAoKhBc,EAAM6C,aArKY,UAqKwB7C,EAAM6C,aAG/CC,EAAQ9C,IACR4C,EAAmB5C,GACrBhC,KAAKO,YAAcyB,EAAM+C,QACf/E,KAAKkB,gBACflB,KAAKO,YAAcyB,EAAMgD,QAAQ,GAAGD,UAIlCE,EAAOjD,IAEXhC,KAAKQ,YAAcwB,EAAMgD,SAAWhD,EAAMgD,QAAQpD,OAAS,EACzD,EACAI,EAAMgD,QAAQ,GAAGD,QAAU/E,KAAKO,aAG9B2E,EAAMlD,IACN4C,EAAmB5C,KACrBhC,KAAKQ,YAAcwB,EAAM+C,QAAU/E,KAAKO,aAG1CP,KAAKoE,eACsB,UAAvBpE,KAAKS,QAAQ7B,QASfoB,KAAKpB,QACDoB,KAAKM,cACP6E,aAAanF,KAAKM,cAGpBN,KAAKM,aAAe8E,YAAWpD,GAAShC,KAAKmC,MAAMH,IA3Q5B,IA2Q6DhC,KAAKS,QAAQhC,YAIrGmC,EAAAA,QAAeyE,KAtNO,qBAsNiBrF,KAAKc,UAAUwC,SAAQgC,IAC5DzC,EAAAA,QAAa4B,GAAGa,EAvOI,yBAuOuBtD,GAASA,EAAMuD,sBAGxDvF,KAAKkB,eACP2B,EAAAA,QAAa4B,GAAGzE,KAAKc,SA7OA,2BA6O6BkB,GAAS8C,EAAM9C,KACjEa,EAAAA,QAAa4B,GAAGzE,KAAKc,SA7OF,yBA6O6BkB,GAASkD,EAAIlD,KAE7DhC,KAAKc,SAAS0E,UAAUC,IAnOG,mBAqO3B5C,EAAAA,QAAa4B,GAAGzE,KAAKc,SArPD,0BAqP6BkB,GAAS8C,EAAM9C,KAChEa,EAAAA,QAAa4B,GAAGzE,KAAKc,SArPF,yBAqP6BkB,GAASiD,EAAKjD,KAC9Da,EAAAA,QAAa4B,GAAGzE,KAAKc,SArPH,wBAqP6BkB,GAASkD,EAAIlD,MAIhE0C,SAAS1C,GACP,GAAI,kBAAkBgC,KAAKhC,EAAM0D,OAAOC,SACtC,OAGF,MAAMnB,EAAYpF,EAAiB4C,EAAM4D,KACrCpB,IACFxC,EAAMuD,iBACNvF,KAAKwB,OAAOgD,IAIhB5B,cAAc/C,GAKZ,OAJAG,KAAKC,OAASJ,GAAWA,EAAQgG,WAC/BjF,EAAAA,QAAeyE,KArPC,iBAqPmBxF,EAAQgG,YAC3C,GAEK7F,KAAKC,OAAO6F,QAAQjG,GAG7BkG,gBAAgBhD,EAAOiD,GACrB,MAAMC,EAASlD,IAAU/D,EACzB,MDpDyB,EAACkH,EAAMF,EAAeG,EAAeC,KAChE,IAAI1D,EAAQwD,EAAKJ,QAAQE,GAGzB,IAAe,IAAXtD,EACF,OAAOwD,GAAMC,GAAiBC,EAAiBF,EAAKtE,OAAS,EAAI,GAGnE,MAAMyE,EAAaH,EAAKtE,OAQxB,OANAc,GAASyD,EAAgB,GAAK,EAE1BC,IACF1D,GAASA,EAAQ2D,GAAcA,GAG1BH,EAAK5B,KAAKgC,IAAI,EAAGhC,KAAKiC,IAAI7D,EAAO2D,EAAa,MCoC5CG,CAAqBxG,KAAKC,OAAQ+F,EAAeC,EAAQjG,KAAKS,QAAQ5B,MAG/E4H,mBAAmBC,EAAeC,GAChC,MAAMC,EAAc5G,KAAK4C,cAAc8D,GACjCG,EAAY7G,KAAK4C,cAAchC,EAAAA,QAAeC,QAAQpB,EAAsBO,KAAKc,WAEvF,OAAO+B,EAAAA,QAAaiE,QAAQ9G,KAAKc,SA7RhB,oBA6RuC,CACtD4F,cAAAA,EACAlC,UAAWmC,EACXI,KAAMF,EACNpE,GAAImE,IAIRI,2BAA2BnH,GACzB,GAAIG,KAAKW,mBAAoB,CAC3B,MAAMsG,EAAkBrG,EAAAA,QAAeC,QAhRrB,UAgR8Cb,KAAKW,oBAErEsG,EAAgBzB,UAAU0B,OAAO1H,GACjCyH,EAAgBE,gBAAgB,gBAEhC,MAAMC,EAAaxG,EAAAA,QAAeyE,KA/Qb,mBA+QsCrF,KAAKW,oBAEhE,IAAK,IAAI0G,EAAI,EAAGA,EAAID,EAAWxF,OAAQyF,IACrC,GAAIC,OAAOC,SAASH,EAAWC,GAAGG,aAAa,oBAAqB,MAAQxH,KAAK4C,cAAc/C,GAAU,CACvGuH,EAAWC,GAAG7B,UAAUC,IAAIjG,GAC5B4H,EAAWC,GAAGI,aAAa,eAAgB,QAC3C,QAMRpF,kBACE,MAAMxC,EAAUG,KAAKG,gBAAkBS,EAAAA,QAAeC,QAAQpB,EAAsBO,KAAKc,UAEzF,IAAKjB,EACH,OAGF,MAAM6H,EAAkBJ,OAAOC,SAAS1H,EAAQ2H,aAAa,oBAAqB,IAE9EE,GACF1H,KAAKS,QAAQkH,gBAAkB3H,KAAKS,QAAQkH,iBAAmB3H,KAAKS,QAAQhC,SAC5EuB,KAAKS,QAAQhC,SAAWiJ,GAExB1H,KAAKS,QAAQhC,SAAWuB,KAAKS,QAAQkH,iBAAmB3H,KAAKS,QAAQhC,SAIzE+C,OAAOoG,EAAkB/H,GACvB,MAAMkD,EAAQ/C,KAAK6H,kBAAkBD,GAC/B5B,EAAgBpF,EAAAA,QAAeC,QAAQpB,EAAsBO,KAAKc,UAClEgH,EAAqB9H,KAAK4C,cAAcoD,GACxC+B,EAAclI,GAAWG,KAAK+F,gBAAgBhD,EAAOiD,GAErDgC,EAAmBhI,KAAK4C,cAAcmF,GACtCE,EAAY9G,QAAQnB,KAAKE,WAEzB+F,EAASlD,IAAU/D,EACnBkJ,EAAuBjC,EAjUR,sBADF,oBAmUbkC,EAAiBlC,EAjUH,qBACA,qBAiUdU,EAAqB3G,KAAKoI,kBAAkBrF,GAElD,GAAIgF,GAAeA,EAAYvC,UAAU6C,SAAS7I,GAEhD,YADAQ,KAAKK,YAAa,GAIpB,GAAIL,KAAKK,WACP,OAIF,GADmBL,KAAKyG,mBAAmBsB,EAAapB,GACzC2B,iBACb,OAGF,IAAKtC,IAAkB+B,EAErB,OAGF/H,KAAKK,YAAa,EAEd4H,GACFjI,KAAKpB,QAGPoB,KAAKgH,2BAA2Be,GAChC/H,KAAKG,eAAiB4H,EAEtB,MAAMQ,EAAmB,KACvB1F,EAAAA,QAAaiE,QAAQ9G,KAAKc,SAAUvB,EAAY,CAC9CmH,cAAeqB,EACfvD,UAAWmC,EACXI,KAAMe,EACNrF,GAAIuF,KAIR,GAAIhI,KAAKc,SAAS0E,UAAU6C,SA5WP,SA4WmC,CACtDN,EAAYvC,UAAUC,IAAI0C,GD1PjBtI,CAAAA,IAEbA,EAAQ2I,cC0PJC,CAAOV,GAEP/B,EAAcR,UAAUC,IAAIyC,GAC5BH,EAAYvC,UAAUC,IAAIyC,GAE1B,MAAMQ,EAAmB,KACvBX,EAAYvC,UAAU0B,OAAOgB,EAAsBC,GACnDJ,EAAYvC,UAAUC,IAAIjG,GAE1BwG,EAAcR,UAAU0B,OAAO1H,EAAmB2I,EAAgBD,GAElElI,KAAKK,YAAa,EAElB+E,WAAWmD,EAAkB,IAG/BvI,KAAK2I,eAAeD,EAAkB1C,GAAe,QAErDA,EAAcR,UAAU0B,OAAO1H,GAC/BuI,EAAYvC,UAAUC,IAAIjG,GAE1BQ,KAAKK,YAAa,EAClBkI,IAGEN,GACFjI,KAAKmC,QAIT0F,kBAAkBrD,GAChB,MAAK,CAACrF,EAAiBD,GAAgB0J,SAASpE,GAI5CrG,IACKqG,IAActF,EAAiBD,EAAaD,EAG9CwF,IAActF,EAAiBF,EAAaC,EAP1CuF,EAUX4D,kBAAkBrF,GAChB,MAAK,CAAC/D,EAAYC,GAAY2J,SAAS7F,GAInC5E,IACK4E,IAAU9D,EAAaC,EAAiBC,EAG1C4D,IAAU9D,EAAaE,EAAkBD,EAPvC6D,EAYa8F,yBAAChJ,EAASC,GAChC,MAAMgJ,EAAOpJ,EAASqJ,oBAAoBlJ,EAASC,GAEnD,IAAIW,QAAEA,GAAYqI,EACI,iBAAXhJ,IACTW,EAAU,IACLA,KACAX,IAIP,MAAMkJ,EAA2B,iBAAXlJ,EAAsBA,EAASW,EAAQ9B,MAE7D,GAAsB,iBAAXmB,EACTgJ,EAAKrG,GAAG3C,QACH,GAAsB,iBAAXkJ,EAAqB,CACrC,QAA4B,IAAjBF,EAAKE,GACd,MAAM,IAAI/E,UAAW,oBAAmB+E,MAG1CF,EAAKE,UACIvI,EAAQhC,UAAYgC,EAAQwI,OACrCH,EAAKlK,QACLkK,EAAK3G,SAIa0G,uBAAC/I,GACrB,OAAOE,KAAKkJ,MAAK,WACfxJ,EAASyJ,kBAAkBnJ,KAAMF,MAIX+I,2BAAC7G,GACzB,MAAM0D,EDtdqB7F,CAAAA,IAC7B,MAAMuJ,EApCYvJ,CAAAA,IAClB,IAAIuJ,EAAWvJ,EAAQ2H,aAAa,kBAEpC,IAAK4B,GAAyB,MAAbA,EAAkB,CACjC,IAAIC,EAAWxJ,EAAQ2H,aAAa,QAMpC,IAAK6B,IAAcA,EAAST,SAAS,OAASS,EAASC,WAAW,KAChE,OAAO,KAILD,EAAST,SAAS,OAASS,EAASC,WAAW,OACjDD,EAAY,IAAGA,EAASE,MAAM,KAAK,MAGrCH,EAAWC,GAAyB,MAAbA,EAAmBA,EAASG,OAAS,KAG9D,OAAOJ,GAcUK,CCqduBzJ,MDndxC,OAAOoJ,EAAWhL,SAASsL,cAAcN,GAAY,MCmdpCO,GAEf,IAAKjE,IAAWA,EAAOF,UAAU6C,SA7cT,YA8ctB,OAGF,MAAMvI,EAAS,IACVkD,EAAAA,QAAYC,kBAAkByC,MAC9B1C,EAAAA,QAAYC,kBAAkBjD,OAE7B4J,EAAa5J,KAAKwH,aAAa,oBAEjCoC,IACF9J,EAAOrB,UAAW,GAGpBiB,EAASyJ,kBAAkBzD,EAAQ5F,GAE/B8J,GACFlK,EAASmK,YAAYnE,GAAQjD,GAAGmH,GAGlC5H,EAAMuD,kBD1UiBuE,IAAAA,EAjBAC,SCqW3BlH,EAAAA,QAAa4B,GAAGrG,SA7ec,6BAkBF,sCA2dyCsB,EAASsK,qBAE9EnH,EAAAA,QAAa4B,GAAGrD,OAhfa,6BAgfgB,KAC3C,MAAM6I,EAAYrJ,EAAAA,QAAeyE,KA7dR,6BA+dzB,IAAK,IAAIgC,EAAI,EAAG6C,EAAMD,EAAUrI,OAAQyF,EAAI6C,EAAK7C,IAC/C3H,EAASyJ,kBAAkBc,EAAU5C,GAAI3H,EAASmK,YAAYI,EAAU5C,QD1VjDyC,ECqWRpK,EDtXQqK,EAkBN,KACjB,MAAMI,EA/BQ,MAChB,MAAMC,OAAEA,GAAWhJ,OAEnB,OAAIgJ,IAAWhM,SAASiM,KAAKC,aAAa,qBACjCF,EAGF,MAwBKG,GAEV,GAAIJ,EAAG,CACL,MAAMK,EAAOV,EAAOvL,KACdkM,EAAqBN,EAAEO,GAAGF,GAChCL,EAAEO,GAAGF,GAAQV,EAAOa,gBACpBR,EAAEO,GAAGF,GAAMI,YAAcd,EACzBK,EAAEO,GAAGF,GAAMK,WAAa,KACtBV,EAAEO,GAAGF,GAAQC,EACNX,EAAOa,mBA3BQ,YAAxBvM,SAAS0M,YAEN5M,EAA0B0D,QAC7BxD,SAAS2M,iBAAiB,oBAAoB,KAC5C7M,EAA0BoF,SAAQyG,GAAYA,SAIlD7L,EAA0B8M,KAAKjB,IAE/BA","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.1.3): util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nconst toType = obj => {\n  if (obj === null || obj === undefined) {\n    return `${obj}`\n  }\n\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttr = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttr || (!hrefAttr.includes('#') && !hrefAttr.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {\n      hrefAttr = `#${hrefAttr.split('#')[1]}`\n    }\n\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null\n  }\n\n  return selector\n}\n\nconst getSelectorFromElement = element => {\n  const selector = getSelector(element)\n\n  if (selector) {\n    return document.querySelector(selector) ? selector : null\n  }\n\n  return null\n}\n\nconst getElementFromSelector = element => {\n  const selector = getSelector(element)\n\n  return selector ? document.querySelector(selector) : null\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = obj => {\n  if (!obj || typeof obj !== 'object') {\n    return false\n  }\n\n  if (typeof obj.jquery !== 'undefined') {\n    obj = obj[0]\n  }\n\n  return typeof obj.nodeType !== 'undefined'\n}\n\nconst getElement = obj => {\n  if (isElement(obj)) { // it's a jQuery object or a node element\n    return obj.jquery ? obj[0] : obj\n  }\n\n  if (typeof obj === 'string' && obj.length > 0) {\n    return document.querySelector(obj)\n  }\n\n  return null\n}\n\nconst typeCheckConfig = (componentName, config, configTypes) => {\n  Object.keys(configTypes).forEach(property => {\n    const expectedTypes = configTypes[property]\n    const value = config[property]\n    const valueType = value && isElement(value) ? 'element' : toType(value)\n\n    if (!new RegExp(expectedTypes).test(valueType)) {\n      throw new TypeError(\n        `${componentName.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n      )\n    }\n  })\n}\n\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false\n  }\n\n  return getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */\nconst reflow = element => {\n  // eslint-disable-next-line no-unused-expressions\n  element.offsetHeight\n}\n\nconst getjQuery = () => {\n  const { jQuery } = window\n\n  if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return jQuery\n  }\n\n  return null\n}\n\nconst DOMContentLoadedCallbacks = []\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        DOMContentLoadedCallbacks.forEach(callback => callback())\n      })\n    }\n\n    DOMContentLoadedCallbacks.push(callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = callback => {\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener(TRANSITION_END, handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener(TRANSITION_END, handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  let index = list.indexOf(activeElement)\n\n  // if the element does not exist in the list return an element depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return list[!shouldGetNext && isCycleAllowed ? list.length - 1 : 0]\n  }\n\n  const listLength = list.length\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\nexport {\n  getElement,\n  getUID,\n  getSelectorFromElement,\n  getElementFromSelector,\n  getTransitionDurationFromElement,\n  triggerTransitionEnd,\n  isElement,\n  typeCheckConfig,\n  isVisible,\n  isDisabled,\n  findShadowRoot,\n  noop,\n  getNextActiveElement,\n  reflow,\n  getjQuery,\n  onDOMContentLoaded,\n  isRTL,\n  defineJQueryPlugin,\n  execute,\n  executeAfterTransition\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.1.3): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isRTL,\n  isVisible,\n  getNextActiveElement,\n  reflow,\n  triggerTransitionEnd,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'carousel'\nconst DATA_KEY = 'bs.carousel'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ARROW_LEFT_KEY = 'ArrowLeft'\nconst ARROW_RIGHT_KEY = 'ArrowRight'\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\nconst SWIPE_THRESHOLD = 40\n\nconst Default = {\n  interval: 5000,\n  keyboard: true,\n  slide: false,\n  pause: 'hover',\n  wrap: true,\n  touch: true\n}\n\nconst DefaultType = {\n  interval: '(number|boolean)',\n  keyboard: 'boolean',\n  slide: '(boolean|string)',\n  pause: '(string|boolean)',\n  wrap: 'boolean',\n  touch: 'boolean'\n}\n\nconst ORDER_NEXT = 'next'\nconst ORDER_PREV = 'prev'\nconst DIRECTION_LEFT = 'left'\nconst DIRECTION_RIGHT = 'right'\n\nconst KEY_TO_DIRECTION = {\n  [ARROW_LEFT_KEY]: DIRECTION_RIGHT,\n  [ARROW_RIGHT_KEY]: DIRECTION_LEFT\n}\n\nconst EVENT_SLIDE = `slide${EVENT_KEY}`\nconst EVENT_SLID = `slid${EVENT_KEY}`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_CAROUSEL = 'carousel'\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_SLIDE = 'slide'\nconst CLASS_NAME_END = 'carousel-item-end'\nconst CLASS_NAME_START = 'carousel-item-start'\nconst CLASS_NAME_NEXT = 'carousel-item-next'\nconst CLASS_NAME_PREV = 'carousel-item-prev'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\n\nconst SELECTOR_ACTIVE = '.active'\nconst SELECTOR_ACTIVE_ITEM = '.active.carousel-item'\nconst SELECTOR_ITEM = '.carousel-item'\nconst SELECTOR_ITEM_IMG = '.carousel-item img'\nconst SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev'\nconst SELECTOR_INDICATORS = '.carousel-indicators'\nconst SELECTOR_INDICATOR = '[data-bs-target]'\nconst SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]'\nconst SELECTOR_DATA_RIDE = '[data-bs-ride=\"carousel\"]'\n\nconst POINTER_TYPE_TOUCH = 'touch'\nconst POINTER_TYPE_PEN = 'pen'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass Carousel extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._items = null\n    this._interval = null\n    this._activeElement = null\n    this._isPaused = false\n    this._isSliding = false\n    this.touchTimeout = null\n    this.touchStartX = 0\n    this.touchDeltaX = 0\n\n    this._config = this._getConfig(config)\n    this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element)\n    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n    this._pointerEvent = Boolean(window.PointerEvent)\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  next() {\n    this._slide(ORDER_NEXT)\n  }\n\n  nextWhenVisible() {\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden && isVisible(this._element)) {\n      this.next()\n    }\n  }\n\n  prev() {\n    this._slide(ORDER_PREV)\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true\n    }\n\n    if (SelectorEngine.findOne(SELECTOR_NEXT_PREV, this._element)) {\n      triggerTransitionEnd(this._element)\n      this.cycle(true)\n    }\n\n    clearInterval(this._interval)\n    this._interval = null\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n\n    if (this._config && this._config.interval && !this._isPaused) {\n      this._updateInterval()\n\n      this._interval = setInterval(\n        (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\n        this._config.interval\n      )\n    }\n  }\n\n  to(index) {\n    this._activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n    const activeIndex = this._getItemIndex(this._activeElement)\n\n    if (index > this._items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.to(index))\n      return\n    }\n\n    if (activeIndex === index) {\n      this.pause()\n      this.cycle()\n      return\n    }\n\n    const order = index > activeIndex ?\n      ORDER_NEXT :\n      ORDER_PREV\n\n    this._slide(order, this._items[index])\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' ? config : {})\n    }\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX)\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltax / this.touchDeltaX\n\n    this.touchDeltaX = 0\n\n    if (!direction) {\n      return\n    }\n\n    this._slide(direction > 0 ? DIRECTION_RIGHT : DIRECTION_LEFT)\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      EventHandler.on(this._element, EVENT_MOUSEENTER, event => this.pause(event))\n      EventHandler.on(this._element, EVENT_MOUSELEAVE, event => this.cycle(event))\n    }\n\n    if (this._config.touch && this._touchSupported) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    const hasPointerPenTouch = event => {\n      return this._pointerEvent &&\n        (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH)\n    }\n\n    const start = event => {\n      if (hasPointerPenTouch(event)) {\n        this.touchStartX = event.clientX\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.touches[0].clientX\n      }\n    }\n\n    const move = event => {\n      // ensure swiping with one touch and not pinching\n      this.touchDeltaX = event.touches && event.touches.length > 1 ?\n        0 :\n        event.touches[0].clientX - this.touchStartX\n    }\n\n    const end = event => {\n      if (hasPointerPenTouch(event)) {\n        this.touchDeltaX = event.clientX - this.touchStartX\n      }\n\n      this._handleSwipe()\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n\n        this.pause()\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout)\n        }\n\n        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n      }\n    }\n\n    SelectorEngine.find(SELECTOR_ITEM_IMG, this._element).forEach(itemImg => {\n      EventHandler.on(itemImg, EVENT_DRAG_START, event => event.preventDefault())\n    })\n\n    if (this._pointerEvent) {\n      EventHandler.on(this._element, EVENT_POINTERDOWN, event => start(event))\n      EventHandler.on(this._element, EVENT_POINTERUP, event => end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      EventHandler.on(this._element, EVENT_TOUCHSTART, event => start(event))\n      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => move(event))\n      EventHandler.on(this._element, EVENT_TOUCHEND, event => end(event))\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    const direction = KEY_TO_DIRECTION[event.key]\n    if (direction) {\n      event.preventDefault()\n      this._slide(direction)\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode ?\n      SelectorEngine.find(SELECTOR_ITEM, element.parentNode) :\n      []\n\n    return this._items.indexOf(element)\n  }\n\n  _getItemByOrder(order, activeElement) {\n    const isNext = order === ORDER_NEXT\n    return getNextActiveElement(this._items, activeElement, isNext, this._config.wrap)\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget)\n    const fromIndex = this._getItemIndex(SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element))\n\n    return EventHandler.trigger(this._element, EVENT_SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    })\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE, this._indicatorsElement)\n\n      activeIndicator.classList.remove(CLASS_NAME_ACTIVE)\n      activeIndicator.removeAttribute('aria-current')\n\n      const indicators = SelectorEngine.find(SELECTOR_INDICATOR, this._indicatorsElement)\n\n      for (let i = 0; i < indicators.length; i++) {\n        if (Number.parseInt(indicators[i].getAttribute('data-bs-slide-to'), 10) === this._getItemIndex(element)) {\n          indicators[i].classList.add(CLASS_NAME_ACTIVE)\n          indicators[i].setAttribute('aria-current', 'true')\n          break\n        }\n      }\n    }\n  }\n\n  _updateInterval() {\n    const element = this._activeElement || SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n\n    if (!element) {\n      return\n    }\n\n    const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10)\n\n    if (elementInterval) {\n      this._config.defaultInterval = this._config.defaultInterval || this._config.interval\n      this._config.interval = elementInterval\n    } else {\n      this._config.interval = this._config.defaultInterval || this._config.interval\n    }\n  }\n\n  _slide(directionOrOrder, element) {\n    const order = this._directionToOrder(directionOrOrder)\n    const activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n    const activeElementIndex = this._getItemIndex(activeElement)\n    const nextElement = element || this._getItemByOrder(order, activeElement)\n\n    const nextElementIndex = this._getItemIndex(nextElement)\n    const isCycling = Boolean(this._interval)\n\n    const isNext = order === ORDER_NEXT\n    const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END\n    const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV\n    const eventDirectionName = this._orderToDirection(order)\n\n    if (nextElement && nextElement.classList.contains(CLASS_NAME_ACTIVE)) {\n      this._isSliding = false\n      return\n    }\n\n    if (this._isSliding) {\n      return\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\n    if (slideEvent.defaultPrevented) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return\n    }\n\n    this._isSliding = true\n\n    if (isCycling) {\n      this.pause()\n    }\n\n    this._setActiveIndicatorElement(nextElement)\n    this._activeElement = nextElement\n\n    const triggerSlidEvent = () => {\n      EventHandler.trigger(this._element, EVENT_SLID, {\n        relatedTarget: nextElement,\n        direction: eventDirectionName,\n        from: activeElementIndex,\n        to: nextElementIndex\n      })\n    }\n\n    if (this._element.classList.contains(CLASS_NAME_SLIDE)) {\n      nextElement.classList.add(orderClassName)\n\n      reflow(nextElement)\n\n      activeElement.classList.add(directionalClassName)\n      nextElement.classList.add(directionalClassName)\n\n      const completeCallBack = () => {\n        nextElement.classList.remove(directionalClassName, orderClassName)\n        nextElement.classList.add(CLASS_NAME_ACTIVE)\n\n        activeElement.classList.remove(CLASS_NAME_ACTIVE, orderClassName, directionalClassName)\n\n        this._isSliding = false\n\n        setTimeout(triggerSlidEvent, 0)\n      }\n\n      this._queueCallback(completeCallBack, activeElement, true)\n    } else {\n      activeElement.classList.remove(CLASS_NAME_ACTIVE)\n      nextElement.classList.add(CLASS_NAME_ACTIVE)\n\n      this._isSliding = false\n      triggerSlidEvent()\n    }\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  _directionToOrder(direction) {\n    if (![DIRECTION_RIGHT, DIRECTION_LEFT].includes(direction)) {\n      return direction\n    }\n\n    if (isRTL()) {\n      return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT\n    }\n\n    return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV\n  }\n\n  _orderToDirection(order) {\n    if (![ORDER_NEXT, ORDER_PREV].includes(order)) {\n      return order\n    }\n\n    if (isRTL()) {\n      return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT\n    }\n\n    return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT\n  }\n\n  // Static\n\n  static carouselInterface(element, config) {\n    const data = Carousel.getOrCreateInstance(element, config)\n\n    let { _config } = data\n    if (typeof config === 'object') {\n      _config = {\n        ..._config,\n        ...config\n      }\n    }\n\n    const action = typeof config === 'string' ? config : _config.slide\n\n    if (typeof config === 'number') {\n      data.to(config)\n    } else if (typeof action === 'string') {\n      if (typeof data[action] === 'undefined') {\n        throw new TypeError(`No method named \"${action}\"`)\n      }\n\n      data[action]()\n    } else if (_config.interval && _config.ride) {\n      data.pause()\n      data.cycle()\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      Carousel.carouselInterface(this, config)\n    })\n  }\n\n  static dataApiClickHandler(event) {\n    const target = getElementFromSelector(this)\n\n    if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {\n      return\n    }\n\n    const config = {\n      ...Manipulator.getDataAttributes(target),\n      ...Manipulator.getDataAttributes(this)\n    }\n    const slideIndex = this.getAttribute('data-bs-slide-to')\n\n    if (slideIndex) {\n      config.interval = false\n    }\n\n    Carousel.carouselInterface(target, config)\n\n    if (slideIndex) {\n      Carousel.getInstance(target).to(slideIndex)\n    }\n\n    event.preventDefault()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, Carousel.dataApiClickHandler)\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE)\n\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    Carousel.carouselInterface(carousels[i], Carousel.getInstance(carousels[i]))\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Carousel to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Carousel)\n\nexport default Carousel\n"]}